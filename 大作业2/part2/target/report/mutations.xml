<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>code.java</sourceFile><mutatedClass>org.example.code</mutatedClass><mutatedMethod>findDuplicate</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>32</index></indexes><blocks><block>1</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>code.java</sourceFile><mutatedClass>org.example.code</mutatedClass><mutatedMethod>findDuplicate</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>44</index></indexes><blocks><block>3</block></blocks><killingTest>org.example.test_findDuplicate.testAdd(org.example.test_findDuplicate)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>code.java</sourceFile><mutatedClass>org.example.code</mutatedClass><mutatedMethod>findDuplicate</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>62</index></indexes><blocks><block>5</block></blocks><killingTest>org.example.test_findDuplicate.testAdd(org.example.test_findDuplicate)</killingTest><description>replaced int return with 0 for org/example/code::findDuplicate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>code.java</sourceFile><mutatedClass>org.example.code</mutatedClass><mutatedMethod>findOddOccurrence</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>27</index></indexes><blocks><block>2</block></blocks><killingTest>org.example.test_findOdd.test_findOddOccurrence(org.example.test_findOdd)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>code.java</sourceFile><mutatedClass>org.example.code</mutatedClass><mutatedMethod>findOddOccurrence</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>37</index></indexes><blocks><block>3</block></blocks><killingTest>org.example.test_findOdd.test_findOddOccurrence(org.example.test_findOdd)</killingTest><description>replaced int return with 0 for org/example/code::findOddOccurrence</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>code.java</sourceFile><mutatedClass>org.example.code</mutatedClass><mutatedMethod>maxProfit</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>14</index></indexes><blocks><block>1</block></blocks><killingTest>org.example.test_maxProfit.test_maxProfit(org.example.test_maxProfit)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>code.java</sourceFile><mutatedClass>org.example.code</mutatedClass><mutatedMethod>maxProfit</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>25</index></indexes><blocks><block>2</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>code.java</sourceFile><mutatedClass>org.example.code</mutatedClass><mutatedMethod>maxProfit</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>23</index></indexes><blocks><block>2</block></blocks><killingTest>org.example.test_maxProfit.test_maxProfit(org.example.test_maxProfit)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>code.java</sourceFile><mutatedClass>org.example.code</mutatedClass><mutatedMethod>maxProfit</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>35</index></indexes><blocks><block>3</block></blocks><killingTest>org.example.test_maxProfit.test_maxProfit(org.example.test_maxProfit)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>code.java</sourceFile><mutatedClass>org.example.code</mutatedClass><mutatedMethod>maxProfit</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>37</index></indexes><blocks><block>3</block></blocks><killingTest>org.example.test_maxProfit.test_maxProfit(org.example.test_maxProfit)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>code.java</sourceFile><mutatedClass>org.example.code</mutatedClass><mutatedMethod>maxProfit</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>38</index></indexes><blocks><block>3</block></blocks><killingTest>org.example.test_maxProfit.test_maxProfit(org.example.test_maxProfit)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>code.java</sourceFile><mutatedClass>org.example.code</mutatedClass><mutatedMethod>maxProfit</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>14</index></indexes><blocks><block>1</block></blocks><killingTest>org.example.test_maxProfit.test_maxProfit(org.example.test_maxProfit)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>code.java</sourceFile><mutatedClass>org.example.code</mutatedClass><mutatedMethod>maxProfit</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>25</index></indexes><blocks><block>2</block></blocks><killingTest>org.example.test_maxProfit.test_maxProfit(org.example.test_maxProfit)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>code.java</sourceFile><mutatedClass>org.example.code</mutatedClass><mutatedMethod>maxProfit</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>49</index></indexes><blocks><block>5</block></blocks><killingTest>org.example.test_maxProfit.test_maxProfit(org.example.test_maxProfit)</killingTest><description>replaced int return with 0 for org/example/code::maxProfit</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findDuplicate.java</sourceFile><mutatedClass>org.example.test_findDuplicate</mutatedClass><mutatedMethod>testAdd</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>35</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findDuplicate.java</sourceFile><mutatedClass>org.example.test_findDuplicate</mutatedClass><mutatedMethod>testAdd</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>76</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findDuplicate.java</sourceFile><mutatedClass>org.example.test_findDuplicate</mutatedClass><mutatedMethod>testAdd</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>121</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findDuplicate.java</sourceFile><mutatedClass>org.example.test_findDuplicate</mutatedClass><mutatedMethod>testAdd</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>154</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findDuplicate.java</sourceFile><mutatedClass>org.example.test_findDuplicate</mutatedClass><mutatedMethod>testAdd</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>187</index></indexes><blocks><block>10</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findDuplicate.java</sourceFile><mutatedClass>org.example.test_findDuplicate</mutatedClass><mutatedMethod>testAdd</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>240</index></indexes><blocks><block>12</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findDuplicate.java</sourceFile><mutatedClass>org.example.test_findDuplicate</mutatedClass><mutatedMethod>testAdd</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>293</index></indexes><blocks><block>14</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findDuplicate.java</sourceFile><mutatedClass>org.example.test_findDuplicate</mutatedClass><mutatedMethod>testAdd</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>342</index></indexes><blocks><block>16</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findDuplicate.java</sourceFile><mutatedClass>org.example.test_findDuplicate</mutatedClass><mutatedMethod>testAdd</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>359</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findOdd.java</sourceFile><mutatedClass>org.example.test_findOdd</mutatedClass><mutatedMethod>test_findOddOccurrence</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>59</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findOdd.java</sourceFile><mutatedClass>org.example.test_findOdd</mutatedClass><mutatedMethod>test_findOddOccurrence</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>104</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findOdd.java</sourceFile><mutatedClass>org.example.test_findOdd</mutatedClass><mutatedMethod>test_findOddOccurrence</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>141</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findOdd.java</sourceFile><mutatedClass>org.example.test_findOdd</mutatedClass><mutatedMethod>test_findOddOccurrence</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>154</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findOdd.java</sourceFile><mutatedClass>org.example.test_findOdd</mutatedClass><mutatedMethod>test_findOddOccurrence</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>175</index></indexes><blocks><block>10</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findOdd.java</sourceFile><mutatedClass>org.example.test_findOdd</mutatedClass><mutatedMethod>test_findOddOccurrence</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>256</index></indexes><blocks><block>12</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findOdd.java</sourceFile><mutatedClass>org.example.test_findOdd</mutatedClass><mutatedMethod>test_findOddOccurrence</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>285</index></indexes><blocks><block>14</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findOdd.java</sourceFile><mutatedClass>org.example.test_findOdd</mutatedClass><mutatedMethod>test_findOddOccurrence</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>330</index></indexes><blocks><block>16</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_findOdd.java</sourceFile><mutatedClass>org.example.test_findOdd</mutatedClass><mutatedMethod>test_findOddOccurrence</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>407</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_maxProfit.java</sourceFile><mutatedClass>org.example.test_maxProfit</mutatedClass><mutatedMethod>test_maxProfit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>39</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_maxProfit.java</sourceFile><mutatedClass>org.example.test_maxProfit</mutatedClass><mutatedMethod>test_maxProfit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_maxProfit.java</sourceFile><mutatedClass>org.example.test_maxProfit</mutatedClass><mutatedMethod>test_maxProfit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>97</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_maxProfit.java</sourceFile><mutatedClass>org.example.test_maxProfit</mutatedClass><mutatedMethod>test_maxProfit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>126</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_maxProfit.java</sourceFile><mutatedClass>org.example.test_maxProfit</mutatedClass><mutatedMethod>test_maxProfit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>139</index></indexes><blocks><block>10</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>test_maxProfit.java</sourceFile><mutatedClass>org.example.test_maxProfit</mutatedClass><mutatedMethod>test_maxProfit</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>148</index></indexes><blocks><block>12</block></blocks><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
</mutations>
